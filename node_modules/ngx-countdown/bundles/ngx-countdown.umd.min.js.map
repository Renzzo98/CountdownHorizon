{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-countdown/interfaces.ts","ng://ngx-countdown/countdown.timer.ts","ng://ngx-countdown/countdown.config.ts","ng://ngx-countdown/countdown.component.ts","ng://ngx-countdown/countdown.module.ts"],"names":["CountdownStatus","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","CountdownTimer","fns","commands","ing","start","nextTime","Date","process","_this","shift","diff","count","Math","floor","len","frequency","step","setTimeout","add","fn","push","remove","indexOf","splice","Injectable","CountdownGlobalConfig","locale","demand","leftTime","format","timezone","formatDate","_a","date","formatStr","providedIn","tslib_1.__param","Inject","LOCALE_ID","CountdownComponent","timer","defCog","cdr","_notify","left","status","isDestroy","event","EventEmitter","begin","callEvent","restart","stop","destroy","init","pause","resume","action","emit","text","config","frq","getLeft","_reflow","reflow","Array","isArray","notify","forEach","time","Error","force","value","prettyText","detectChanges","done","end","stopTime","getTime","ngOnInit","ngOnDestroy","ngOnChanges","changes","firstChange","tslib_1.__decorate","Input","TemplateRef","Output","Component","selector","template","host","[class.count-down]","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","CountdownModule","NgModule","imports","CommonModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type CountdownFormatFn = (opt: CountdownFormatFnOption) => string;\n\nexport interface CountdownFormatFnOption {\n  date: number;\n  formatStr: string;\n  timezone?: string;\n}\n\nexport enum CountdownStatus {\n  ing,\n  pause,\n  stop,\n  done,\n}\n\nexport interface CountdownConfig {\n  /**\n   * Start the counter on demand, must call `begin()` to starting, Default: `false`\n   */\n  demand?: boolean;\n\n  /**\n   * Calculate the remaining time based on the server, e.g: `10`,`5.5`, (Unit: seconds)\n   */\n  leftTime?: number;\n\n  /**\n   * Refers to counting down from local time to end time (Unit: Milliseconds second UNIX timestamp)\n   */\n  stopTime?: number;\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes), Default: `HH:mm:ss`\n   */\n  format?: string;\n\n  /**\n   * Beautify text, generally used to convert formatted time text into HTML\n   */\n  prettyText?: (text: string) => string;\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  notify?: number[] | number;\n\n  /**\n   * Default based on the implementation of `formatDate` in `@angular/common`\n   *\n   * You can changed to other libs, e.g: [date-fns](https://date-fns.org/v2.0.1/docs/format)\n   */\n  formatDate?: CountdownFormatFn;\n\n  /**\n   * A timezone offset (such as '+0430'), or a standard UTC/GMT. When not supplied, uses the end-user's local system timezone, Default: `+0000`\n   */\n  timezone?: string;\n}\n\nexport type CountdownEventAction = 'start' | 'stop' | 'restart' | 'pause' | 'resume' | 'notify' | 'done';\n\nexport interface CountdownEvent {\n  action: CountdownEventAction;\n  status: CountdownStatus;\n  left: number;\n  text: string;\n}\n\nexport interface CountdownItem {\n  text?: string;\n  value?: number;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CountdownTimer {\n  private fns: Array<((count: number) => number | void) | number> = [];\n  private commands: Array<() => void> = [];\n  private nextTime: number;\n  private ing = false;\n\n  start() {\n    if (this.ing === true) return;\n\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.process();\n  }\n\n  private process() {\n    while (this.commands.length) {\n      this.commands.shift()();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n\n    diff = 100 - (diff % 100);\n    this.nextTime += 100 * count;\n\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1] as number;\n\n      // 100/s\n      if (0 === frequency) {\n        (this.fns[i] as (count: number) => void)(count);\n        // 1000/s\n      } else {\n        // åææ«ä½è³0ï¼åæ¯æ¬¡å 2\n        frequency += 2 * count - 1;\n\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          (this.fns[i] as (count: number) => void)(step);\n        }\n\n        // ææ«ä½è¿åæ1\n        this.fns[i + 1] = (frequency % 20) + 1;\n      }\n    }\n\n    if (!this.ing) return;\n\n    setTimeout(() => this.process(), diff);\n  }\n\n  add(fn: () => void, frequency: number): this {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n\n  remove(fn: () => void): this {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n}\n","// tslint:disable: no-inferrable-types\nimport { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { CountdownFormatFn, CountdownConfig } from './interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class CountdownGlobalConfig implements CountdownConfig {\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  demand?: boolean = false;\n\n  leftTime?: number = 0;\n\n  format?: string = 'HH:mm:ss';\n\n  timezone?: string = '+0000';\n\n  formatDate?: CountdownFormatFn = ({ date, formatStr, timezone }) => {\n    return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n  };\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnInit,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n  LOCALE_ID,\n  ChangeDetectorRef,\n  TemplateRef,\n} from '@angular/core';\n\nimport { CountdownConfig, CountdownStatus, CountdownEvent, CountdownEventAction, CountdownItem } from './interfaces';\nimport { CountdownTimer } from './countdown.timer';\nimport { CountdownGlobalConfig } from './countdown.config';\n\n@Component({\n  selector: 'countdown',\n  template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n  host: { '[class.count-down]': 'true' },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n  private frequency = 1000;\n  private _notify: any = {};\n  private left = 0;\n  private status: CountdownStatus = CountdownStatus.ing;\n  private isDestroy = false;\n  i: CountdownItem = {};\n\n  @Input() config: CountdownConfig;\n  @Input() render: TemplateRef<void>;\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private timer: CountdownTimer,\n    private defCog: CountdownGlobalConfig,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n  begin() {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n\n  /**\n   * Restart countdown\n   */\n  restart(): void {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n  stop() {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n  pause() {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) return;\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n\n  /**\n   * Resume countdown\n   */\n  resume() {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) return;\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n\n  private callEvent(action: CountdownEventAction) {\n    this.event.emit({ action, left: this.left, status: this.status, text: this.i.text });\n  }\n\n  private init() {\n    const { locale, defCog } = this;\n    const config = (this.config = {\n      ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config,\n    });\n    // tslint:disable-next-line: no-bitwise\n    const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n\n    this.getLeft();\n\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count: number = 0) => _reflow.apply(this, [count]);\n\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach((time: number) => {\n        if (time < 1) throw new Error(`The notify config must be a positive integer.`);\n\n        time = time * 1000;\n        time = time - (time % frq);\n        this._notify[time] = true;\n      });\n    }\n\n    this.timer.add(this.reflow, frq).start();\n\n    this.reflow(0, true);\n  }\n\n  private destroy() {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n\n  /**\n   * æ´æ°æ¶é\n   */\n  private reflow(count: number = 0, force: boolean = false): void {\n    if (this.isDestroy) return;\n\n    const { status, config, _notify } = this;\n    if (!force && status !== CountdownStatus.ing) return;\n\n    const value = (this.left = this.left - this.frequency * count);\n    this.i = {\n      value,\n      text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text);\n    }\n    this.cdr.detectChanges();\n\n    if (config.notify === 0 || _notify[value]) {\n      this.callEvent('notify');\n    }\n\n    if (value < 1) {\n      this.status = CountdownStatus.done;\n      this.callEvent('done');\n      this.destroy();\n    }\n  }\n\n  /**\n   * è·ååè®¡æ¶å©ä½å¸§æ°\n   */\n  private getLeft(): void {\n    const { config, frequency } = this;\n    let left = config.leftTime * 1000;\n    const end = config.stopTime;\n\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n\n    this.left = left - (left % frequency);\n  }\n\n  ngOnInit() {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.destroy();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!changes.config.firstChange) {\n      this.restart();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CountdownComponent } from './countdown.component';\nimport { CountdownTimer } from './countdown.timer';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CountdownTimer],\n  declarations: [CountdownComponent],\n  exports: [CountdownComponent],\n})\nexport class CountdownModule {}\n"]}